name: Build and Release

on:
  push:
    tags:
      - "v*" # DÃ©clenchÃ© sur les tags comme v1.0.0, v2.0.0, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Create dist archive
        run: |
          cd dist
          zip -r ../observatory-${{ github.ref_name }}.zip .
          cd ..

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract latest version changes from CHANGELOG
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            awk '/## \[/{if(++n==2)exit;if(n==1)next}n==1' CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Release ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## ðŸš€ Observatory - ${{ steps.get_version.outputs.VERSION }}

            Guild Wars 2 Quest Tracker

            ### ðŸ“¦ Installation
            1. TÃ©lÃ©chargez le fichier `observatory-${{ github.ref_name }}.zip`
            2. Extrayez le contenu
            3. Servez les fichiers avec un serveur web
            4. AccÃ©dez Ã  `index.html`

            ### âœ¨ NouveautÃ©s
            ${{ steps.changelog.outputs.CHANGELOG }}

            ### ðŸ“Š Build Info
            - Node.js: 18
            - Build date: ${{ github.event.head_commit.timestamp }}
            - Commit: ${{ github.sha }}
          files: |
            observatory-${{ github.ref_name }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: observatory-build-${{ github.ref_name }}
          path: dist/
          retention-days: 30
